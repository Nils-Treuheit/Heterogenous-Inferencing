# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fnH0wzrnkb5-wNDMKZ94wNHzfnCp2mRG
"""

import tensorflow as tf
import numpy as np

from Layer_Models.Our_Model import Our_Model

class Conv2D_1x1(Our_Model): #/opt/intel/openvino_2021/deployment_tools/model_optimizer/mo_tf.py --saved_model_dir ./Layer_Models/Conv2D_1x1_Layer --output_dir ./Converted_Models/Conv2D_1x1_Layer --input_shape [1,100,100,1]
    def __init__(self,x=100,y=100):
        self.x=x
        self.y=y
        self.model_Name="Conv2D_1x1_Layer"
        self.input_shape=[1,x,y,1]
        
    def getModel(self): 
        myFirstLayer=tf.keras.Sequential(
            [tf.keras.layers.Conv2D(1,[1,1],use_bias=False)]
        )
        myFirstLayer.build([1,self.x,self.y,1])
        self.model=myFirstLayer
        return myFirstLayer

    def getRandomInput(self):
        input=np.random.random([1,self.x,self.y])
        return input
    



#print(tf.__version__)
#x1=1000
#y1=x1
#a=Conv2D_1x1(x1,y1)
#myFirstLayer=a.getModel()
#a.saveModel()
#print(a.input_shape)
#myFirstLayer.
#myFirstLayer.get_layer(index=0).set_weights(array([[[[5.0]]]],dtype=float32))
#print(type(myFirstLayer.get_layer(index=0).get_weights()))
#print(myFirstLayer.get_layer(index=0).get_weights())
#print(np.random.random([100,100]).shape)
#myInput= np.zeros([1,x1,y1])+1
#myFirstLayer.predict(np.expand_dims(np.random.random([100,100]),0)) #np expand and model predict copied from https://www.tensorflow.org/tutorials/keras/classification
#print(myFirstLayer.predict(myInput)[0][0][0])

#print(myFirstLayer.predict(a.getRandomInput())[0][0][0])
#myFirstLayer.save_weights('/content/model/test2')

